{"version":3,"sources":["components/Home.js","components/Logs.js","components/Analyser.js","components/Results.js","components/Userguide.js","components/Tech_specifications.js","components/My_menu.js","components/Graph.js","App.js","serviceWorker.js","index.js"],"names":["Home","React","Component","Logs","Analyser","Results","title","id","src","width","height","scrolling","Guide","Specifications","Header","Layout","Content","Sider","Footer","SubMenu","Menu","Mymenu","state","collapsed","onCollapse","console","log","setState","style","minHeight","theme","collapsible","this","className","defaultSelectedKeys","mode","Item","key","icon","HomeOutlined","to","AreaChartOutlined","InfoCircleOutlined","padding","margin","exact","path","component","Userguide","Tech_specifications","textAlign","Graph","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4ae85cdf.chunk.js","sourcesContent":["import React from 'react'\n\nclass Home extends React.Component{\nrender() {\n    return (\n        <div>\n          <h2>Home</h2>\n        </div>\n    );\n  }\n}\n\nexport default Home;","import React from 'react'\n\nclass Logs extends React.Component{\nrender() {\n    return (\n        <div>\n          <h2>Logs</h2>\n        </div>\n    );\n  }\n}\n\nexport default Logs;","import React from 'react'\n\nclass Analyser extends React.Component{\nrender() {\n    return (\n        <div>\n          <h2>Analyser</h2>\n        </div>\n    );\n  }\n}\n\nexport default Analyser;","import React from 'react'\n\n\nclass Results extends React.Component{\nrender() {\n    return (\n        <div>\n            <iframe title=\"myhtml\" id=\"graph\" src=\"graph\" width=\"700\" height=\"500\" scrolling=\"yes\" ></iframe>\n        </div>\n    );\n  }\n}\n\nexport default Results;","import React from 'react'\n\nclass Guide extends React.Component{\nrender() {\n    return (\n        <div>\n          <h2>Guide</h2>\n        </div>\n    );\n  }\n}\n\nexport default Guide;","import React from 'react'\n\nclass Specifications extends React.Component{\nrender() {\n    return (\n        <div>\n          <h2>Specifications</h2>\n        </div>\n    );\n  }\n}\n\nexport default Specifications;","import React from 'react'\nimport 'antd/dist/antd.css';\nimport {BrowserRouter as Router, Switch, Route, NavLink} from \"react-router-dom\";\nimport { Layout, Menu, Breadcrumb } from 'antd';\nimport { AreaChartOutlined, HomeOutlined, InfoCircleOutlined } from '@ant-design/icons';\nimport Home from './Home';\nimport Logs from './Logs';\nimport Analyser from './Analyser';\nimport Results from './Results';\nimport Userguide from './Userguide';\nimport Tech_specifications from './Tech_specifications';\n\nconst { Header, Content, Sider, Footer } = Layout;\nconst { SubMenu } = Menu;\n\nclass Mymenu extends React.Component{\n\tstate = {\n\t\tcollapsed: false,\n\t};\n\n\tonCollapse = collapsed => {\n\t\tconsole.log(collapsed);\n\t\tthis.setState({ collapsed });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t<Layout style={{ minHeight: '100vh' }}>\n\t\t\t<Router>\n\t\t\t\t<Sider  theme = \"light\" collapsible collapsed={this.state.collapsed} onCollapse={this.onCollapse}>\n\t\t\t\t\t<div className=\"logo\">\n\t\t\t\t\t\t{/* <Menu.Item  icon={<HomeOutlined />}></Menu.Item> */}\n\t\t\t\t\t</div>\n\t\t\t\t\t<Menu theme=\"light\"defaultSelectedKeys={['/']} mode=\"inline\">\n\t\t\t\t\t\t<Menu.Item key=\"/\" icon={<HomeOutlined />}>\n\t\t\t\t\t\t\t<NavLink to=\"/\" className=\"nav-text\">Home</NavLink>\n\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t\t<SubMenu key=\"sub1\" icon={<AreaChartOutlined />} title=\"Analyser\">\n\t\t\t\t\t\t\t<Menu.Item key=\"/logs\">\n\t\t\t\t\t\t\t\t<NavLink to=\"/logs\" className=\"nav-text\">Logs</NavLink>\n\t\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t\t\t<Menu.Item key=\"/analyser\">\n\t\t\t\t\t\t\t\t<NavLink to=\"/analyser\" className=\"nav-text\">Analyser</NavLink>\n\t\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t\t\t<Menu.Item key=\"/results\">\n\t\t\t\t\t\t\t\t<NavLink to=\"/results\" className=\"nav-text\">Results</NavLink>\n\t\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t\t</SubMenu>\n\t\t\t\t\t\t<SubMenu key=\"sub2\" icon={<InfoCircleOutlined />} title=\"About\">\n\t\t\t\t\t\t\t<Menu.Item key=\"/userguide\">\n\t\t\t\t\t\t\t\t<NavLink to=\"/userguide\" className=\"nav-text\">User guide</NavLink>\n\t\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t\t\t<Menu.Item key=\"/tech_specifications\">\n\t\t\t\t\t\t\t\t<NavLink to=\"/tech_specifications\" className=\"nav-text\">Tech.specifications</NavLink>\n\t\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t\t</SubMenu>\n\t\t\t\t\t</Menu>\n\t\t\t\t</Sider>\n\t\t\t\t<Layout className=\"site-layout\">\n\t\t\t\t\t<Header className=\"site-layout-background\" style={{ padding: 0 }} />\n\t\t\t\t\t<Content style={{ margin: '0 16px' }}>\n\t\t\t\t\t\t<Breadcrumb style={{ margin: '16px 0' }}>\n\n\t\t\t\t\t\t</Breadcrumb>\n\n\t\t\t\t\t\t<div className=\"site-layout-background\" style={{ padding: 24, minHeight: 400 }}>\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Route exact path='/' component={Home} />\n\t\t\t\t\t\t\t\t<Route path='/logs' component={Logs} />\n\t\t\t\t\t\t\t\t<Route path='/analyser' component={Analyser} />\n\t\t\t\t\t\t\t\t<Route path='/results' component={Results} />\n\t\t\t\t\t\t\t\t<Route path='/userguide' component={Userguide} />\n\t\t\t\t\t\t\t\t<Route path='/tech_specifications' component={Tech_specifications} />\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Content>\n\t\t\t\t\t<Footer style={{ textAlign: 'center' }}>Saint-Petersburg Polytechnical University</Footer>\n\t\t\t\t</Layout>\n\t\t\t</Router>\n\t\t</Layout>\n\t\t);\n\t}\n}\n\nexport default Mymenu","import React from 'react'\nimport 'antd/dist/antd.css';\n\nclass Graph extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<h1>Hello world!)</h1>\n\t\t);\n\t}\n}\n\nexport default Graph","import React from 'react'\nimport 'antd/dist/antd.css';\nimport './App.css';\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport { Layout } from 'antd';\n\nimport Mymenu from './components/My_menu';\nimport Graph from './components/Graph'\n\n\n\n\n\nclass App extends React.Component {\n\trender() {\n\t\treturn (\n\t\t<Layout style={{ minHeight: '100vh' }}>\n\t\t\t<Router>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path='/graph' component={Graph} />\n\t\t\t\t\t<Route exact path='/*' component={Mymenu} />\n\t\t\t\t</Switch>\n\t\t\t</Router>\n      \t</Layout>\n\t\t);\n\t}\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport 'antd/dist/antd.css';\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n\nserviceWorker.unregister()"],"sourceRoot":""}